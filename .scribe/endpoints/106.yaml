name: ECGSupportQuery
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/ecg/support-query
    metadata:
      groupName: ECGSupportQuery
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "support_queries": [
                          {
                              "query_id": 1,
                              "name": "Example Name",
                              "email": "user@example.com",
                              "contact_no": "Example value",
                              "query": "Example value",
                              "clinic_id": 1,
                              "query_date": "Example value",
                              "city": "Example value",
                              "ip_address": "Example value"
                          }
                      ],
                      "pagination": {
                          "current_page": 1,
                          "per_pages": 50,
                          "total": 100
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/ecg/support-query
    metadata:
      groupName: ECGSupportQuery
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      QueryID:
        name: QueryID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example QueryID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Name:
        name: Name
        description: required.
        required: false
        example: '"Example Name"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailId:
        name: EmailId
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailId"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ContactNo:
        name: ContactNo
        description: required.
        required: false
        example: '"Example ContactNo"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Query:
        name: Query
        description: required.
        required: false
        example: '"Example Query"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ClinicID:
        name: ClinicID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example ClinicID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      QueryDate:
        name: QueryDate
        description: 'required. date.'
        required: false
        example: '"Example QueryDate"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      City:
        name: City
        description: required.
        required: false
        example: '"Example City"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      IPAddress:
        name: IPAddress
        description: required.
        required: false
        example: '"Example IPAddress"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      QueryID: '"Example QueryID"'
      Name: '"Example Name"'
      EmailId: '"Example EmailId"'
      ContactNo: '"Example ContactNo"'
      Query: '"Example Query"'
      ClinicID: '"Example ClinicID"'
      QueryDate: '"Example QueryDate"'
      City: '"Example City"'
      IPAddress: '"Example IPAddress"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              {
                  "data": {
                      "query": {
                          "query_id": 1,
                          "name": "Example Name",
                          "email": "user@example.com",
                          "contact_no": "Example value",
                          "query": "Example value",
                          "clinic_id": 1,
                          "query_date": "Example value",
                          "city": "Example value",
                          "ip_address": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/ecg/support-query/{eCGSupportQuery_QueryID}'
    metadata:
      groupName: ECGSupportQuery
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      eCGSupportQuery_QueryID:
        name: eCGSupportQuery_QueryID
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'required. The ID of the ecgsupportquery to update.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      eCGSupportQuery_QueryID: 16
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      QueryID:
        name: QueryID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example QueryID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Name:
        name: Name
        description: optional.
        required: false
        example: '"Example Name"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailId:
        name: EmailId
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailId"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ContactNo:
        name: ContactNo
        description: optional.
        required: false
        example: '"Example ContactNo"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Query:
        name: Query
        description: optional.
        required: false
        example: '"Example Query"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ClinicID:
        name: ClinicID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example ClinicID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      QueryDate:
        name: QueryDate
        description: 'optional. date.'
        required: false
        example: '"Example QueryDate"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      City:
        name: City
        description: optional.
        required: false
        example: '"Example City"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      IPAddress:
        name: IPAddress
        description: optional.
        required: false
        example: '"Example IPAddress"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      QueryID: '"Example QueryID"'
      Name: '"Example Name"'
      EmailId: '"Example EmailId"'
      ContactNo: '"Example ContactNo"'
      Query: '"Example Query"'
      ClinicID: '"Example ClinicID"'
      QueryDate: '"Example QueryDate"'
      City: '"Example City"'
      IPAddress: '"Example IPAddress"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "query": {
                          "query_id": 1,
                          "name": "Example Name",
                          "email": "user@example.com",
                          "contact_no": "Example value",
                          "query": "Example value",
                          "clinic_id": 1,
                          "query_date": "Example value",
                          "city": "Example value",
                          "ip_address": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Resource not found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
