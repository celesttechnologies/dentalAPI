## Autogenerated by Scribe. DO NOT MODIFY.

name: PatientDrugsPrescription
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/patients/{patient_PatientID}/drugs/prescription'
    metadata:
      groupName: PatientDrugsPrescription
      groupDescription: ''
      subgroup: DrugsPrescription
      subgroupDescription: 'PatientDrugsPrescriptionController handles the CRUD operations for patient drugs prescription controller.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient_PatientID:
        name: patient_PatientID
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      patient_PatientID: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "prescriptions": [
                          {
                              "prescription_id": 1,
                              "patient_prescription_id": 1,
                              "drug_id": 1,
                              "frequency_id": 1,
                              "dosage_id": 1,
                              "duration": "Example value",
                              "drug_note": "Example value"
                          }
                      ],
                      "pagination": {
                          "current_page": 1,
                          "per_pages": 50,
                          "total": 100
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/patients/{patient}/drugs/prescription'
    metadata:
      groupName: PatientDrugsPrescription
      groupDescription: ''
      subgroup: DrugsPrescription
      subgroupDescription: 'PatientDrugsPrescriptionController handles the CRUD operations for patient drugs prescription controller.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient:
        name: patient
        description: 'The patient.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      patient: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      PatientPrescriptionID:
        name: PatientPrescriptionID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example PatientPrescriptionID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      DrugID:
        name: DrugID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example DrugID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      FrequencyID:
        name: FrequencyID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example FrequencyID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      DosageID:
        name: DosageID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example DosageID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Duration:
        name: Duration
        description: required.
        required: false
        example: '"Example Duration"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      DrugNote:
        name: DrugNote
        description: required.
        required: false
        example: '"Example DrugNote"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      PatientPrescriptionID: '"Example PatientPrescriptionID"'
      DrugID: '"Example DrugID"'
      FrequencyID: '"Example FrequencyID"'
      DosageID: '"Example DosageID"'
      Duration: '"Example Duration"'
      DrugNote: '"Example DrugNote"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              {
                  "data": {
                      "prescription": {
                          "prescription_id": 1,
                          "patient_prescription_id": 1,
                          "drug_id": 1,
                          "frequency_id": 1,
                          "dosage_id": 1,
                          "duration": "Example value",
                          "drug_note": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/patients/{patient}/drugs/prescription/{id}'
    metadata:
      groupName: PatientDrugsPrescription
      groupDescription: ''
      subgroup: DrugsPrescription
      subgroupDescription: 'PatientDrugsPrescriptionController handles the CRUD operations for patient drugs prescription controller.'
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient:
        name: patient
        description: 'The patient.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'required. The ID of the patientdrugsprescription to update.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      patient: 16
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      PatientPrescriptionID:
        name: PatientPrescriptionID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example PatientPrescriptionID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      DrugID:
        name: DrugID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example DrugID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      FrequencyID:
        name: FrequencyID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example FrequencyID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      DosageID:
        name: DosageID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example DosageID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Duration:
        name: Duration
        description: optional.
        required: false
        example: '"Example Duration"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      DrugNote:
        name: DrugNote
        description: optional.
        required: false
        example: '"Example DrugNote"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      PatientPrescriptionID: '"Example PatientPrescriptionID"'
      DrugID: '"Example DrugID"'
      FrequencyID: '"Example FrequencyID"'
      DosageID: '"Example DosageID"'
      Duration: '"Example Duration"'
      DrugNote: '"Example DrugNote"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "prescription": {
                          "prescription_id": 1,
                          "patient_prescription_id": 1,
                          "drug_id": 1,
                          "frequency_id": 1,
                          "dosage_id": 1,
                          "duration": "Example value",
                          "drug_note": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Resource not found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
