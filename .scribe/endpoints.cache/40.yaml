## Autogenerated by Scribe. DO NOT MODIFY.

name: EmailTransaction
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/patients/{patient_PatientID}/email/transaction'
    metadata:
      groupName: EmailTransaction
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient_PatientID:
        name: patient_PatientID
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      patient_PatientID: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "email_transactions": [
                          {
                              "id": 1,
                              "clinic_id": 1,
                              "patient_id": 1,
                              "email_type_id": "user@example.com",
                              "email_to": "user@example.com",
                              "email_from": "user@example.com",
                              "email_cc": "user@example.com",
                              "email_bcc": "user@example.com",
                              "subject": "Example value",
                              "message_text": "Example value",
                              "email_attachments_id": "user@example.com",
                              "created_by": "Example value",
                              "created_on": "Example value",
                              "status": "Example value",
                              "sent_on": "Example value",
                              "is_deleted": true,
                              "email_from_name": "user@example.com",
                              "email_to_name": "user@example.com",
                              "scheduled_on": "Example value"
                          }
                      ],
                      "pagination": {
                          "current_page": 1,
                          "per_pages": 50,
                          "total": 100
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/patients/{patient}/email/transaction'
    metadata:
      groupName: EmailTransaction
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient:
        name: patient
        description: 'The patient.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      patient: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ClinicIID:
        name: ClinicIID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example ClinicIID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      PatientID:
        name: PatientID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example PatientID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailTypeID:
        name: EmailTypeID
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailTypeID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailTo:
        name: EmailTo
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailTo"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailFrom:
        name: EmailFrom
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailFrom"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailCC:
        name: EmailCC
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailCC"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailBcc:
        name: EmailBcc
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailBcc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Subject:
        name: Subject
        description: required.
        required: false
        example: '"Example Subject"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      MessageText:
        name: MessageText
        description: required.
        required: false
        example: '"Example MessageText"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailAttachmentsID:
        name: EmailAttachmentsID
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailAttachmentsID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      CreatedBy:
        name: CreatedBy
        description: required.
        required: false
        example: '"Example CreatedBy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      CreatedOn:
        name: CreatedOn
        description: required.
        required: false
        example: '"Example CreatedOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Status:
        name: Status
        description: required.
        required: false
        example: '"Example Status"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      SentOn:
        name: SentOn
        description: required.
        required: false
        example: '"Example SentOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      IsDeleted:
        name: IsDeleted
        description: required.
        required: false
        example: '"Example IsDeleted"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailFromName:
        name: EmailFromName
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailFromName"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailToName:
        name: EmailToName
        description: 'required. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailToName"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ScheduledOn:
        name: ScheduledOn
        description: required.
        required: false
        example: '"Example ScheduledOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      ClinicIID: '"Example ClinicIID"'
      PatientID: '"Example PatientID"'
      EmailTypeID: '"Example EmailTypeID"'
      EmailTo: '"Example EmailTo"'
      EmailFrom: '"Example EmailFrom"'
      EmailCC: '"Example EmailCC"'
      EmailBcc: '"Example EmailBcc"'
      Subject: '"Example Subject"'
      MessageText: '"Example MessageText"'
      EmailAttachmentsID: '"Example EmailAttachmentsID"'
      CreatedBy: '"Example CreatedBy"'
      CreatedOn: '"Example CreatedOn"'
      Status: '"Example Status"'
      SentOn: '"Example SentOn"'
      IsDeleted: '"Example IsDeleted"'
      EmailFromName: '"Example EmailFromName"'
      EmailToName: '"Example EmailToName"'
      ScheduledOn: '"Example ScheduledOn"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              {
                  "data": {
                      "transaction": {
                          "id": 1,
                          "clinic_id": 1,
                          "patient_id": 1,
                          "email_type_id": "user@example.com",
                          "email_to": "user@example.com",
                          "email_from": "user@example.com",
                          "email_cc": "user@example.com",
                          "email_bcc": "user@example.com",
                          "subject": "Example value",
                          "message_text": "Example value",
                          "email_attachments_id": "user@example.com",
                          "created_by": "Example value",
                          "created_on": "Example value",
                          "status": "Example value",
                          "sent_on": "Example value",
                          "is_deleted": true,
                          "email_from_name": "user@example.com",
                          "email_to_name": "user@example.com",
                          "scheduled_on": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/patients/{patient}/email/transaction/{emailTransaction_EmailTransactionID}'
    metadata:
      groupName: EmailTransaction
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      patient:
        name: patient
        description: 'The patient.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      emailTransaction_EmailTransactionID:
        name: emailTransaction_EmailTransactionID
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'required. The ID of the emailtransaction to update.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      patient: 16
      emailTransaction_EmailTransactionID: 16
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ClinicIID:
        name: ClinicIID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example ClinicIID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      PatientID:
        name: PatientID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example PatientID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailTypeID:
        name: EmailTypeID
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailTypeID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailTo:
        name: EmailTo
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailTo"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailFrom:
        name: EmailFrom
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailFrom"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailCC:
        name: EmailCC
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailCC"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailBcc:
        name: EmailBcc
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailBcc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Subject:
        name: Subject
        description: optional.
        required: false
        example: '"Example Subject"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      MessageText:
        name: MessageText
        description: optional.
        required: false
        example: '"Example MessageText"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailAttachmentsID:
        name: EmailAttachmentsID
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailAttachmentsID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      CreatedBy:
        name: CreatedBy
        description: optional.
        required: false
        example: '"Example CreatedBy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      CreatedOn:
        name: CreatedOn
        description: optional.
        required: false
        example: '"Example CreatedOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Status:
        name: Status
        description: optional.
        required: false
        example: '"Example Status"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      SentOn:
        name: SentOn
        description: optional.
        required: false
        example: '"Example SentOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      IsDeleted:
        name: IsDeleted
        description: optional.
        required: false
        example: '"Example IsDeleted"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailFromName:
        name: EmailFromName
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailFromName"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      EmailToName:
        name: EmailToName
        description: 'optional. Must be a valid email address. Maximum length: 255.'
        required: false
        example: '"Example EmailToName"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ScheduledOn:
        name: ScheduledOn
        description: optional.
        required: false
        example: '"Example ScheduledOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      ClinicIID: '"Example ClinicIID"'
      PatientID: '"Example PatientID"'
      EmailTypeID: '"Example EmailTypeID"'
      EmailTo: '"Example EmailTo"'
      EmailFrom: '"Example EmailFrom"'
      EmailCC: '"Example EmailCC"'
      EmailBcc: '"Example EmailBcc"'
      Subject: '"Example Subject"'
      MessageText: '"Example MessageText"'
      EmailAttachmentsID: '"Example EmailAttachmentsID"'
      CreatedBy: '"Example CreatedBy"'
      CreatedOn: '"Example CreatedOn"'
      Status: '"Example Status"'
      SentOn: '"Example SentOn"'
      IsDeleted: '"Example IsDeleted"'
      EmailFromName: '"Example EmailFromName"'
      EmailToName: '"Example EmailToName"'
      ScheduledOn: '"Example ScheduledOn"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "transaction": {
                          "id": 1,
                          "clinic_id": 1,
                          "patient_id": 1,
                          "email_type_id": "user@example.com",
                          "email_to": "user@example.com",
                          "email_from": "user@example.com",
                          "email_cc": "user@example.com",
                          "email_bcc": "user@example.com",
                          "subject": "Example value",
                          "message_text": "Example value",
                          "email_attachments_id": "user@example.com",
                          "created_by": "Example value",
                          "created_on": "Example value",
                          "status": "Example value",
                          "sent_on": "Example value",
                          "is_deleted": true,
                          "email_from_name": "user@example.com",
                          "email_to_name": "user@example.com",
                          "scheduled_on": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Resource not found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
