## Autogenerated by Scribe. DO NOT MODIFY.

name: Clinic
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/clinic
    metadata:
      groupName: Clinic
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "clinics": [
                          {
                              "clinic_id": 1,
                              "name": "Example Name",
                              "address1": "Example value",
                              "address2": "Example value",
                              "city": "Example value",
                              "state": "Example value",
                              "country_id": 1,
                              "phone": "Example value",
                              "fax": "Example value",
                              "email": "user@example.com",
                              "description": "Example value",
                              "authentication_key": "Example value",
                              "last_updated_on": "Example value",
                              "last_updated_by": "Example value",
                              "ftp_backup_server": "Example value",
                              "ftp_password": "Example value",
                              "ftp_user_id": 1,
                              "email_host": "user@example.com",
                              "email_password": "user@example.com",
                              "email_port": "user@example.com",
                              "email_userid": "user@example.com",
                              "created_on": "Example value",
                              "created_by": "Example value",
                              "authentication_key_guid": 1,
                              "license_type_id": 1,
                              "license_valid_till": 1,
                              "clinic_code": "Example value",
                              "clinic_letterhead_header": "Example value",
                              "clinic_logo": "Example value",
                              "rowguid": 1,
                              "patient_kiosk_tab_access": "Example value"
                          }
                      ],
                      "pagination": {
                          "current_page": 1,
                          "per_pages": 50,
                          "total": 100
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/clinic
    metadata:
      groupName: Clinic
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ClinicID:
        name: ClinicID
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example ClinicID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Name:
        name: Name
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example Name"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Address1:
        name: Address1
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example Address1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Address2:
        name: Address2
        description: 'required. Maximum length: 255.'
        required: false
        example: '"Example Address2"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      City:
        name: City
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example City"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      State:
        name: State
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example State"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      CountryID:
        name: CountryID
        description: 'required. integer.'
        required: false
        example: 1.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Phone:
        name: Phone
        description: 'optional. nullable. Maximum length: 15.'
        required: false
        example: '"Example Phone"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Fax:
        name: Fax
        description: 'optional. nullable. Maximum length: 15.'
        required: false
        example: '"Example Fax"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Email:
        name: Email
        description: 'optional. nullable. Must be a valid email address.'
        required: false
        example: '"Example Email"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Description:
        name: Description
        description: 'optional. nullable.'
        required: false
        example: '"Example Description"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      AuthenticationKey:
        name: AuthenticationKey
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example AuthenticationKey"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      LastUpdatedOn:
        name: LastUpdatedOn
        description: 'optional. nullable. date.'
        required: false
        example: '"Example LastUpdatedOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      LastUpdatedBy:
        name: LastUpdatedBy
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example LastUpdatedBy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      FTPBackupServer:
        name: FTPBackupServer
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example FTPBackupServer"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      FTPPassword:
        name: FTPPassword
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example FTPPassword"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      FTPUserID:
        name: FTPUserID
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example FTPUserID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailHost:
        name: EmailHost
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example EmailHost"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailPassword:
        name: EmailPassword
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example EmailPassword"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailPort:
        name: EmailPort
        description: 'optional. nullable. Maximum length: 50.'
        required: false
        example: '"Example EmailPort"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailUserid:
        name: EmailUserid
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      CreatedOn:
        name: CreatedOn
        description: 'optional. nullable. date.'
        required: false
        example: '"Example CreatedOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      CreatedBy:
        name: CreatedBy
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example CreatedBy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      AuthenticationKeyGuid:
        name: AuthenticationKeyGuid
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      LicenseTypeID:
        name: LicenseTypeID
        description: 'required. integer.'
        required: false
        example: 1.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      LicenseValidTill:
        name: LicenseValidTill
        description: 'optional. nullable. date.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      ClinicCode:
        name: ClinicCode
        description: 'optional. nullable. Maximum length: 100.'
        required: false
        example: '"Example ClinicCode"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      ClinicLetterHeadHeader:
        name: ClinicLetterHeadHeader
        description: 'optional. nullable.'
        required: false
        example: '"Example ClinicLetterHeadHeader"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      ClinicLogo:
        name: ClinicLogo
        description: 'optional. nullable.'
        required: false
        example: '"Example ClinicLogo"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      rowguid:
        name: rowguid
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      PatientKioskTabAccess:
        name: PatientKioskTabAccess
        description: 'optional. nullable. Maximum length: 100.'
        required: false
        example: '"Example PatientKioskTabAccess"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      ClinicID: '"Example ClinicID"'
      Name: '"Example Name"'
      Address1: '"Example Address1"'
      Address2: '"Example Address2"'
      City: '"Example City"'
      State: '"Example State"'
      CountryID: 1.0
      Phone: '"Example Phone"'
      Fax: '"Example Fax"'
      Email: '"Example Email"'
      Description: '"Example Description"'
      AuthenticationKey: '"Example AuthenticationKey"'
      LastUpdatedOn: '"Example LastUpdatedOn"'
      LastUpdatedBy: '"Example LastUpdatedBy"'
      FTPBackupServer: '"Example FTPBackupServer"'
      FTPPassword: '"Example FTPPassword"'
      FTPUserID: '"Example FTPUserID"'
      EmailHost: '"Example EmailHost"'
      EmailPassword: '"Example EmailPassword"'
      EmailPort: '"Example EmailPort"'
      EmailUserid: '"1"'
      CreatedOn: '"Example CreatedOn"'
      CreatedBy: '"Example CreatedBy"'
      AuthenticationKeyGuid: '"1"'
      LicenseTypeID: 1.0
      LicenseValidTill: '"1"'
      ClinicCode: '"Example ClinicCode"'
      ClinicLetterHeadHeader: '"Example ClinicLetterHeadHeader"'
      ClinicLogo: '"Example ClinicLogo"'
      rowguid: '"1"'
      PatientKioskTabAccess: '"Example PatientKioskTabAccess"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              {
                  "data": {
                      "clinic": {
                          "clinic_id": 1,
                          "name": "Example Name",
                          "address1": "Example value",
                          "address2": "Example value",
                          "city": "Example value",
                          "state": "Example value",
                          "country_id": 1,
                          "phone": "Example value",
                          "fax": "Example value",
                          "email": "user@example.com",
                          "description": "Example value",
                          "authentication_key": "Example value",
                          "last_updated_on": "Example value",
                          "last_updated_by": "Example value",
                          "ftp_backup_server": "Example value",
                          "ftp_password": "Example value",
                          "ftp_user_id": 1,
                          "email_host": "user@example.com",
                          "email_password": "user@example.com",
                          "email_port": "user@example.com",
                          "email_userid": "user@example.com",
                          "created_on": "Example value",
                          "created_by": "Example value",
                          "authentication_key_guid": 1,
                          "license_type_id": 1,
                          "license_valid_till": 1,
                          "clinic_code": "Example value",
                          "clinic_letterhead_header": "Example value",
                          "clinic_logo": "Example value",
                          "rowguid": 1,
                          "patient_kiosk_tab_access": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/clinic/{clinic_ClinicID}'
    metadata:
      groupName: Clinic
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      clinic_ClinicID:
        name: clinic_ClinicID
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'required. The ID of the clinic to update.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      clinic_ClinicID: 16
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ClinicID:
        name: ClinicID
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example ClinicID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Name:
        name: Name
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example Name"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Address1:
        name: Address1
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example Address1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Address2:
        name: Address2
        description: 'optional. Maximum length: 255.'
        required: false
        example: '"Example Address2"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      City:
        name: City
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example City"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      State:
        name: State
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example State"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      CountryID:
        name: CountryID
        description: 'optional. integer.'
        required: false
        example: 1.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      Phone:
        name: Phone
        description: 'optional. nullable. Maximum length: 15.'
        required: false
        example: '"Example Phone"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Fax:
        name: Fax
        description: 'optional. nullable. Maximum length: 15.'
        required: false
        example: '"Example Fax"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Email:
        name: Email
        description: 'optional. nullable. Must be a valid email address.'
        required: false
        example: '"Example Email"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      Description:
        name: Description
        description: 'optional. nullable.'
        required: false
        example: '"Example Description"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      AuthenticationKey:
        name: AuthenticationKey
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example AuthenticationKey"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      LastUpdatedOn:
        name: LastUpdatedOn
        description: 'optional. nullable. date.'
        required: false
        example: '"Example LastUpdatedOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      LastUpdatedBy:
        name: LastUpdatedBy
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example LastUpdatedBy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      FTPBackupServer:
        name: FTPBackupServer
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example FTPBackupServer"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      FTPPassword:
        name: FTPPassword
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example FTPPassword"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      FTPUserID:
        name: FTPUserID
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example FTPUserID"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailHost:
        name: EmailHost
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example EmailHost"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailPassword:
        name: EmailPassword
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example EmailPassword"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailPort:
        name: EmailPort
        description: 'optional. nullable. Maximum length: 50.'
        required: false
        example: '"Example EmailPort"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      EmailUserid:
        name: EmailUserid
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      CreatedOn:
        name: CreatedOn
        description: 'optional. nullable. date.'
        required: false
        example: '"Example CreatedOn"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      CreatedBy:
        name: CreatedBy
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"Example CreatedBy"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      AuthenticationKeyGuid:
        name: AuthenticationKeyGuid
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      LicenseTypeID:
        name: LicenseTypeID
        description: 'optional. integer.'
        required: false
        example: 1.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      LicenseValidTill:
        name: LicenseValidTill
        description: 'optional. nullable. date.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      ClinicCode:
        name: ClinicCode
        description: 'optional. nullable. Maximum length: 100.'
        required: false
        example: '"Example ClinicCode"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      ClinicLetterHeadHeader:
        name: ClinicLetterHeadHeader
        description: 'optional. nullable.'
        required: false
        example: '"Example ClinicLetterHeadHeader"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      ClinicLogo:
        name: ClinicLogo
        description: 'optional. nullable.'
        required: false
        example: '"Example ClinicLogo"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      rowguid:
        name: rowguid
        description: 'optional. nullable. Maximum length: 255.'
        required: false
        example: '"1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      PatientKioskTabAccess:
        name: PatientKioskTabAccess
        description: 'optional. nullable. Maximum length: 100.'
        required: false
        example: '"Example PatientKioskTabAccess"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      ClinicID: '"Example ClinicID"'
      Name: '"Example Name"'
      Address1: '"Example Address1"'
      Address2: '"Example Address2"'
      City: '"Example City"'
      State: '"Example State"'
      CountryID: 1.0
      Phone: '"Example Phone"'
      Fax: '"Example Fax"'
      Email: '"Example Email"'
      Description: '"Example Description"'
      AuthenticationKey: '"Example AuthenticationKey"'
      LastUpdatedOn: '"Example LastUpdatedOn"'
      LastUpdatedBy: '"Example LastUpdatedBy"'
      FTPBackupServer: '"Example FTPBackupServer"'
      FTPPassword: '"Example FTPPassword"'
      FTPUserID: '"Example FTPUserID"'
      EmailHost: '"Example EmailHost"'
      EmailPassword: '"Example EmailPassword"'
      EmailPort: '"Example EmailPort"'
      EmailUserid: '"1"'
      CreatedOn: '"Example CreatedOn"'
      CreatedBy: '"Example CreatedBy"'
      AuthenticationKeyGuid: '"1"'
      LicenseTypeID: 1.0
      LicenseValidTill: '"1"'
      ClinicCode: '"Example ClinicCode"'
      ClinicLetterHeadHeader: '"Example ClinicLetterHeadHeader"'
      ClinicLogo: '"Example ClinicLogo"'
      rowguid: '"1"'
      PatientKioskTabAccess: '"Example PatientKioskTabAccess"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              {
                  "data": {
                      "clinic": {
                          "clinic_id": 1,
                          "name": "Example Name",
                          "address1": "Example value",
                          "address2": "Example value",
                          "city": "Example value",
                          "state": "Example value",
                          "country_id": 1,
                          "phone": "Example value",
                          "fax": "Example value",
                          "email": "user@example.com",
                          "description": "Example value",
                          "authentication_key": "Example value",
                          "last_updated_on": "Example value",
                          "last_updated_by": "Example value",
                          "ftp_backup_server": "Example value",
                          "ftp_password": "Example value",
                          "ftp_user_id": 1,
                          "email_host": "user@example.com",
                          "email_password": "user@example.com",
                          "email_port": "user@example.com",
                          "email_userid": "user@example.com",
                          "created_on": "Example value",
                          "created_by": "Example value",
                          "authentication_key_guid": 1,
                          "license_type_id": 1,
                          "license_valid_till": 1,
                          "clinic_code": "Example value",
                          "clinic_letterhead_header": "Example value",
                          "clinic_logo": "Example value",
                          "rowguid": 1,
                          "patient_kiosk_tab_access": "Example value"
                      }
                  }
              }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: '{"message": "Validation error", "errors": {"field": ["Error message"]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Resource not found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"message": "Internal server error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
